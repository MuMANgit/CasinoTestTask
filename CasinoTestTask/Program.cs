const bool _checkZero = true;
var neededSum = 5000;


if (_checkZero && neededSum % 10 != 0) // Проверяем возможно ли выдать купюры из банкомата, те если сумма с монетами то выдача невозможна
{
    Console.WriteLine("Выдача такой суммы невозможна");
    Environment.Exit(0);
    // TODO: возможно еще можно сразу проверять сумму из словаря и требуемую сумму для клиента и если сумма из словаря меньше делал бы выход. Пиши я не консольку я бы запихнул логику с номиналом в класс и написал метод TotalCount для словаря который бы возвращал общую сумму всех номиналов. 
}

Dictionary<int, int> bills = new Dictionary<int, int>()
{
    {5000, 40 }, {1000, 20}, {500, 20} , { 100, 20 }, {10, 20} 
};

foreach (var b in bills)
{
    var tmp = neededSum / b.Key; // Получаем кол-во входящих купюр равных номиналу на котором сейчас находимся

    if (tmp >= 1)
    {
        if (tmp <= b.Value) // В терминале достаточно купюр номинала на котором сейчас находимся
        {
            neededSum -= tmp * b.Key; // Вычитаем из суммы кол-во входящих купюр равных номиналу на котором сейчас находимся
            CheckSum(neededSum); // Регулярно проверяем не выдана ли вся сумма, таким способом отказались от холостых проходов
            continue;
        }
        if (tmp >= b.Value) // В терминале меньше купюр номинала на котором сейчас находимся
        {
            neededSum -= b.Value * b.Key; // Вычитыем весь доступный номинал
            CheckSum(neededSum); // Регулярно проверяем не выдана ли вся сумма, таким способом отказались от холостых проходов
            continue;
        }
    };
}

Console.WriteLine("Выдача такой суммы невозможна");

static void CheckSum(int neededSum)
{
    if (neededSum == 0)
    {
        Console.WriteLine("Success");
        Environment.Exit(0);
    }
}